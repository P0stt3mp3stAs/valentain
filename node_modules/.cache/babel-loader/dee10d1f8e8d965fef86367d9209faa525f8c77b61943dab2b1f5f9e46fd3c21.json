{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { Link, useHistory } from 'react-router-dom';\n// import heart from '../../Assets/heart.png'\n// import './Heart.css'\n\n// const Heart = () => {\n//   const [showTorchEffect, setShowTorchEffect] = useState(true);\n//   const history = useHistory();\n\n//   useEffect(() => {\n//     const hearts = document.querySelectorAll('.heart');\n\n//     const changePositionAndRotation = () => {\n//       hearts.forEach((heart) => {\n//         const randomX = Math.random() * (window.innerWidth - 60);\n//         const randomY = Math.random() * (window.innerHeight - 60);\n//         const randomRotation = Math.random() * 360;\n\n//         heart.style.left = `${randomX}px`;\n//         heart.style.top = `${randomY}px`;\n//         heart.style.transform = `rotate(${randomRotation}deg)`;\n//       });\n//     };\n\n//     const interval = setInterval(changePositionAndRotation, 5000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const handleClick = () => {\n//     setShowTorchEffect(false);\n\n//     const heartImage = document.querySelector('.heart');\n//     heartImage.classList.add('enlarge');\n\n//     setTimeout(() => {\n//       history.push('/I_love_u');\n//     }, 3000); // Adjust the timing for your loading animation\n//   };\n\n//   return (\n//     <div className='heart-container'>\n//       {showTorchEffect && <TorchEffect2 />}\n//       <Link to='/I_love_u' onClick={handleClick}>\n//         <img src={heart} alt='heart' className='heart' />\n//       </Link>\n//       <img src={heart} alt='heart' className='heart' />\n//       <img src={heart} alt='heart' className='heart' />\n//       <img src={heart} alt='heart' className='heart' />\n//       <img src={heart} alt='heart' className='heart' />\n//     </div>\n//   )\n// }\n\n// export default Heart","map":{"version":3,"names":[],"sources":["/Users/lucy/Desktop/gift to my love/iloveyou/src/components/Heart/Heart.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { Link, useHistory } from 'react-router-dom';\n// import heart from '../../Assets/heart.png'\n// import './Heart.css'\n\n\n\n// const Heart = () => {\n//   const [showTorchEffect, setShowTorchEffect] = useState(true);\n//   const history = useHistory();\n\n//   useEffect(() => {\n//     const hearts = document.querySelectorAll('.heart');\n\n//     const changePositionAndRotation = () => {\n//       hearts.forEach((heart) => {\n//         const randomX = Math.random() * (window.innerWidth - 60);\n//         const randomY = Math.random() * (window.innerHeight - 60);\n//         const randomRotation = Math.random() * 360;\n\n//         heart.style.left = `${randomX}px`;\n//         heart.style.top = `${randomY}px`;\n//         heart.style.transform = `rotate(${randomRotation}deg)`;\n//       });\n//     };\n\n//     const interval = setInterval(changePositionAndRotation, 5000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const handleClick = () => {\n//     setShowTorchEffect(false);\n\n//     const heartImage = document.querySelector('.heart');\n//     heartImage.classList.add('enlarge');\n\n//     setTimeout(() => {\n//       history.push('/I_love_u');\n//     }, 3000); // Adjust the timing for your loading animation\n//   };\n\n//   return (\n//     <div className='heart-container'>\n//       {showTorchEffect && <TorchEffect2 />}\n//       <Link to='/I_love_u' onClick={handleClick}>\n//         <img src={heart} alt='heart' className='heart' />\n//       </Link>\n//       <img src={heart} alt='heart' className='heart' />\n//       <img src={heart} alt='heart' className='heart' />\n//       <img src={heart} alt='heart' className='heart' />\n//       <img src={heart} alt='heart' className='heart' />\n//     </div>\n//   )\n// }\n\n// export default Heart\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}